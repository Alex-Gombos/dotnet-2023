// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Demo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Demo.proto</summary>
public static partial class DemoReflection {

  #region Descriptor
  /// <summary>File descriptor for Demo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DemoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgpEZW1vLnByb3RvIiwKBE5vZGUSCgoCaWQYASACKBISCwoDbGF0GAIgAigS",
          "EgsKA2xvbhgDIAIoEg=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Node), global::Node.Parser, new[]{ "Id", "Lat", "Lon" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Node : pb::IMessage<Node> {
  private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Node> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DemoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Node() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Node(Node other) : this() {
    _hasBits0 = other._hasBits0;
    id_ = other.id_;
    lat_ = other.lat_;
    lon_ = other.lon_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Node Clone() {
    return new Node(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private readonly static long IdDefaultValue = 0L;

  private long id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Id {
    get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      id_ = value;
    }
  }
  /// <summary>Gets whether the "id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "lat" field.</summary>
  public const int LatFieldNumber = 2;
  private readonly static long LatDefaultValue = 0L;

  private long lat_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Lat {
    get { if ((_hasBits0 & 2) != 0) { return lat_; } else { return LatDefaultValue; } }
    set {
      _hasBits0 |= 2;
      lat_ = value;
    }
  }
  /// <summary>Gets whether the "lat" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasLat {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "lat" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearLat() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "lon" field.</summary>
  public const int LonFieldNumber = 3;
  private readonly static long LonDefaultValue = 0L;

  private long lon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Lon {
    get { if ((_hasBits0 & 4) != 0) { return lon_; } else { return LonDefaultValue; } }
    set {
      _hasBits0 |= 4;
      lon_ = value;
    }
  }
  /// <summary>Gets whether the "lon" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasLon {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "lon" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearLon() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Node);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Node other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Lat != other.Lat) return false;
    if (Lon != other.Lon) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasId) hash ^= Id.GetHashCode();
    if (HasLat) hash ^= Lat.GetHashCode();
    if (HasLon) hash ^= Lon.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteSInt64(Id);
    }
    if (HasLat) {
      output.WriteRawTag(16);
      output.WriteSInt64(Lat);
    }
    if (HasLon) {
      output.WriteRawTag(24);
      output.WriteSInt64(Lon);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasId) {
      size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Id);
    }
    if (HasLat) {
      size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Lat);
    }
    if (HasLon) {
      size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Lon);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Node other) {
    if (other == null) {
      return;
    }
    if (other.HasId) {
      Id = other.Id;
    }
    if (other.HasLat) {
      Lat = other.Lat;
    }
    if (other.HasLon) {
      Lon = other.Lon;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadSInt64();
          break;
        }
        case 16: {
          Lat = input.ReadSInt64();
          break;
        }
        case 24: {
          Lon = input.ReadSInt64();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
